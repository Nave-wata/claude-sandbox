#!/usr/bin/env bash
# Claude Sandbox - Run Claude Code in a containerized sandbox environment
# This script wraps Docker to provide a sandboxed Claude Code environment

set -e

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SANDBOX_DIR="$SCRIPT_DIR/sandbox"
IMAGE_NAME="claude-sandbox"
CONTAINER_NAME="claude-sandbox-$(id -u)-$(date +%s)-$$-$(shuf -i 1000-9999 -n 1)"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Docker is available
check_docker() {
    if ! command -v docker &> /dev/null; then
        log_error "Docker is not installed or not in PATH"
        exit 1
    fi

    if ! docker info &> /dev/null; then
        log_error "Docker daemon is not running or accessible"
        exit 1
    fi
}

# Build Docker image if it doesn't exist
build_image() {
    if ! docker image inspect "$IMAGE_NAME" &> /dev/null; then
        log_info "Building Claude Sandbox Docker image..."
        docker build -t "$IMAGE_NAME" "$SANDBOX_DIR"
    fi
}

# Get current working directory for mounting
get_workdir() {
    echo "$(pwd)"
}

# Main function to run Claude in sandbox
run_claude_sandbox() {
    local workdir="$(get_workdir)"
    
    log_info "Starting Claude Sandbox..."
    log_info "Mounting current directory: $workdir"
    
    # Check if container name already exists before running
    if docker ps -a --format "{{.Names}}" | grep -q "^${CONTAINER_NAME}$"; then
        log_error "Container name conflict detected: $CONTAINER_NAME"
        log_error "This is extremely rare but can happen if multiple instances start simultaneously."
        log_error "Please try running the command again."
        exit 1
    fi
    
    # Run Claude in sandbox with current directory mounted
    # Pass all arguments directly to claude command
    docker run -it --rm \
        --name "$CONTAINER_NAME" \
        -v "$workdir:/workspace" \
        -v "${HOME}/.claude:/home/node/.claude" \
        -v "${HOME}/.claude.json:/home/node/.claude.json" \
        -w "/workspace" \
        "$IMAGE_NAME" \
        claude "$@"
}

# Future extension point for claude-sandbox specific options
# Currently all arguments are passed through to claude command
handle_sandbox_options() {
    # Reserved for future claude-sandbox specific functionality
    # For now, all arguments are passed directly to claude
    return 0
}

# Main execution
main() {
    # Handle any future claude-sandbox specific options
    handle_sandbox_options "$@"
    
    check_docker
    build_image
    run_claude_sandbox "$@"
}

# Run main function with all arguments
main "$@"
